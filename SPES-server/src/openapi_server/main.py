# coding: utf-8

"""
    SPES

    ### Documentazione Termini chiave:   - PF: persona fragile   - MED: medico   - OPS: Operatore Sociosanitario (o chi ne fa le veci)   Autori:   - Luca Gregori   - Alessandro Wood 

    The version of the OpenAPI document: 1.0.0
    Contact: luc.gregori3@stud.uniroma3.it
    Generated by: https://openapi-generator.tech
"""
import uvicorn
from fastapi import FastAPI
from starlette.middleware.cors import CORSMiddleware

from apis.auth_api import router as AuthApiRouter
from apis.pf_api import router as PfApiRouter
from apis.report_api import router as ReportApiRouter
from apis.wallet_api import router as WalletApiRouter
from containers import Container

tags_metadata = [
    {
        "name": "auth",
        "description": "Operazioni riguardanti gli utenti. Contiene anche la logica per l'autenticazione degli stessi.",
    },
    {
        "name": "pf",
        "description": "Operazioni riguardanti la gestione delle info relative alle PF.",
    },
    {
        "name": "report",
        "description": "Operazioni riguardanti la gestione dei referti medici delle PF.",
    },
    {
        "name": "session",
        "description": "Operazioni riguardati la gestione della sessione. Per il momento l'unica entità gestita dalla sessione è report. Si specifica inoltre che la sessione è gestita sfruttando Redis.",
    },
    {
        "name": "wallet",
        "description": "Operazioni riguardati la gestione del portadocumenti delle PF.",
    },
]

app = FastAPI(
    title="SPES",
    description="### Documentazione Termini chiave:   - PF: persona fragile   - MED: medico   - OPS: Operatore Sociosanitario (o chi ne fa le veci)   Autori:   - Luca Gregori   - Alessandro Wood ",
    version="1.0.0",
    openapi_tags=tags_metadata
)

app.include_router(AuthApiRouter)
app.include_router(PfApiRouter)
app.include_router(ReportApiRouter)
app.include_router(WalletApiRouter)

container = Container()
db = container.db()
db.create_database()
db.startup()
app.container = container

origins = [
    "http://localhost",
    "http://localhost:4200"
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
    expose_headers=["id","entity","tipologia","place_of_issue","release_date","expiration_date","upload_date","number"]
)
